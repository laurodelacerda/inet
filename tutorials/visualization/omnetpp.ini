[General]
tkenv-plugin-path = ../../../etc/plugins
debug-on-errors = true
record-eventlog = true


[Config Visualization01]	# Showing Boston downtown
description = Showing Boston downtown
network = VisualizationA

# PARAMETERS
# coordinate system
*.coordinateSystem.playgroundLongitude = -71.070421deg
*.coordinateSystem.playgroundLatitude = 42.357824deg
*.coordinateSystem.playgroundAltitude = 0.1m
*.coordinateSystem.playgroundHeading = 68.3deg

# VISUALIZER
# show the map
*.visualizer.osgVisualizer.sceneVisualizerType = "SceneOsgEarthVisualizer"
*.visualizer.osgVisualizer.sceneVisualizer.mapFile = "boston.earth"
*.visualizer.osgVisualizer.sceneVisualizer.playgroundShading = false
*.visualizer.osgVisualizer.sceneVisualizer.playgroundColor = "#000000"
*.visualizer.osgVisualizer.sceneVisualizer.playgroundOpacity = 0.1
*.visualizer.osgVisualizer.sceneVisualizer.axisLength = 100m


[Config Visualization02]	# Adding static 3D objects to the scene	# under construction	# under construction
extends = Visualization01
description = Adding static 3D objects to the scene
#########################


[Config Visualization03]	# Displaying communiation/interference range
extends = Visualization02
description = Displaying communication & interference range
network = VisualizationB

# PARAMETERS
# wlan
*.accessPoint0.wlan[*].radio.transmitter.power = 1mW
*.pedestrian*.wlan[*].radio.transmitter.power = 0.7mW

# VISUALIZER
# display communication and interface ranges
*.visualizer.*.mediumVisualizer.displayCommunicationRanges = true
*.visualizer.*.mediumVisualizer.displayInterferenceRanges = true


[Config Visualization04]	# Using 3D models for network nodes
extends = Visualization03
description = Using 3D models for network nodes

# PARAMETERS

# VISUALIZER
# change phone to a boxman
# external 3D animated osg model, I take it from "inet/examples/visualization/networknode/" folder
*.pedestrian0.osgModel = "boxman.osgb.(0.06).scale.0,0,90.rot" 
*.pedestrian1.osgModel = "boxman.osgb.(0.06).scale.0,0,90.rot"


[Config Visualization05]	# Displaying recent movement and orientation
extends = Visualization04
description = Displaying recent movement

# PARAMETERS
# common mobility
*.**.mobility.initFromDisplayString = false

# pedestrians common initial
*.pedestrian*.mobilityType = "MassMobility"
*.pedestrian*.mobility.initialZ = 0.5m
*.pedestrian*.mobility.constraintAreaMinZ = 0m
*.pedestrian*.mobility.constraintAreaMaxZ = 1m
*.pedestrian*.mobility.changeInterval = 0.5s
*.pedestrian*.mobility.changeAngleBy = uniform(-10deg, 10deg)
*.pedestrian*.mobility.speed = 1.3mps

# pedestrian0 mobility
*.pedestrian0.mobility.initialX = 395m
*.pedestrian0.mobility.initialY = 65m
*.pedestrian0.mobility.constraintAreaMinX = 390m
*.pedestrian0.mobility.constraintAreaMinY = 63m
*.pedestrian0.mobility.constraintAreaMaxX = 400m
*.pedestrian0.mobility.constraintAreaMaxY = 230m

# pedestrian1 mobility
*.pedestrian1.mobility.initialX = 600m
*.pedestrian1.mobility.initialY = 90m
*.pedestrian1.mobility.constraintAreaMinX = 595m
*.pedestrian1.mobility.constraintAreaMinY = 90m
*.pedestrian1.mobility.constraintAreaMaxX = 605m
*.pedestrian1.mobility.constraintAreaMaxY = 230m

# accessPoint0 mobility
*.accessPoint*.mobilityType = "StationaryMobility"		# default, can be omitted
*.accessPoint*.mobility.coordinateSystemModule = "coordinateSystem"
*.accessPoint0.mobility.initialLatitude = 42.3542933deg
*.accessPoint0.mobility.initialLongitude = -71.0663985deg
*.accessPoint*.mobility.initialAltitude = 0.5m

# VISUALIZER
# show movements
*.visualizer.*.mobilityVisualizer.displayVelocity = true
*.visualizer.*.mobilityVisualizer.displayMovementTrail = true


[Config Visualization06]	# Showing IP addresses
extends = Visualization05
description = Showing IP addresses

# PARAMETERS

# VISUALIZER
# show pedestrians' wlan ip addresses
*.visualizer.*.interfaceTableVisualizer.nodeFilter = "*.pedestrian*"
*.visualizer.*.interfaceTableVisualizer.interfaceFilter = "wlan*"


[Config Visualization07]	# Showing wifi association
extends = Visualization06
description = Showing wifi association

# PARAMETERS

# VISUALIZER
# turn off ip addresses
*.visualizer.*.interfaceTableVisualizer.nodeFilter = ""

# show wifi association
*.visualizer.*.ieee80211Visualizer.nodeFilter = "**"


[Config Visualization08]	# Displaying transmissions & receptions
extends = Visualization07
description = Displaying transmissions & receptions

# PARAMETERS
# voip application
#*.pedestrian0.numUdpApps = 1
#*.pedestrian1.numUdpApps = 1

# voip sender		# If check_and_cast error solved, uncomment this
#*.pedestrian0.udpApp[0].typename = "SimpleVoIPSender"
#*.pedestrian0.udpApp[0].destAddress = "pedestrian1"
#*.pedestrian0.udpApp[0].localPort = 5000
#*.pedestrian0.udpApp[0].destPort = 5000
# can be changed or can be omitted
#*.pedestrian0.udpApp[0].startTime = 1s
#*.pedestrian0.udpApp[0].stopTime = 31s

# voip receiver		# If check_and_cast error solved, uncomment this
#*.pedestrian1.udpApp[0].typename = "SimpleVoIPReceiver"
#*.pedestrian1.udpApp[0].localPort = 5000
#*.pedestrian1.udpApp[0].adaptivePlayoutDelay = true

# VISUALIZER
# turn off ieee802.11 visualizer?
#*.visualizer.*.ieee80211Visualizer.nodeFilter = ""

# display transmissions & receptions
*.visualizer.*.mediumVisualizer.displayTransmissions = true
*.visualizer.*.mediumVisualizer.displayReceptions = true
*.visualizer.*.mediumVisualizer.transmissionImage = "transmission.png"
*.visualizer.*.mediumVisualizer.receptionImage = "reception.png"


[Config Visualization09]	# Showing propagating signals
extends = Visualization08
description = Showing propagating signals

# PARAMETERS

# VISUALIZER
# show propagating signals
*.visualizer.*.mediumVisualizer.displaySignals = true
*.visualizer.*.mediumVisualizer.signalPropagationUpdateInterval = 50ns
#*.visualizer.osgVisualizer.mediumVisualizer.signalShape = "ring"
#*.visualizer.osgVisualizer.mediumVisualizer.signalShape = "sphere"
*.visualizer.osgVisualizer.mediumVisualizer.signalShape = "both"


[Config Visualization10]	# Showing active physical links
extends = Visualization09
description = Showing active physical links

# PARAMETERS

# VISUALIZER
# display physical links
*.visualizer.*.physicalLinkVisualizer.packetNameFilter = "*"


[Config Visualization11]	# Showing active data links
extends = Visualization10
description = Showing active data links

# PARAMETERS

# VISUALIZER
# turn off physical links
*.visualizer.*.physicalLinkVisualizer.packetNameFilter = ""

# show VoIP data links
*.visualizer.*.dataLinkVisualizer.packetNameFilter = "*VoIP*"


[Config Visualization12]	# Displaying playout delay statistic
extends = Visualization11
description = Displaying playout delay statistics

# PARAMETERS

# VISUALIZER
# turn off ieee802.11 visualizer?
*.visualizer.*.ieee80211Visualizer.nodeFilter = ""

# display playout delay statistic
*.visualizer.*.statisticVisualizer.signalName = "VoIPPlayoutDelay"
*.visualizer.*.statisticVisualizer.statisticName = "playoutDelay"
*.visualizer.*.statisticVisualizer.prefix = "Playout delay"
*.visualizer.*.statisticVisualizer.unit = "s ms"
*.visualizer.*.statisticVisualizer.sourcePathFilter = "**.udpApp[0]"


[Config Visualization13]	# Showing configured routing tables
extends = Visualization12
description = Showing routing tables
network = VisualizationC

# PARAMETERS
# pedestrianVideo wlan
*.pedestrianVideo.wlan[*].radio.transmitter.power = 0.7mW

# initialize pedestrianVideo position
*.pedestrianVideo.mobilityType = "StationaryMobility"
*.pedestrianVideo.mobility.initialX = 468m
*.pedestrianVideo.mobility.initialY = 130m

# router0 mobility
*.router*.mobilityType = "StationaryMobility"
*.router*.mobility.coordinateSystemModule = "coordinateSystem"
*.router0.mobility.initialLatitude = 42.35433deg
*.router0.mobility.initialLongitude = -71.06550deg
*.router*.mobility.initialAltitude = 0.5m

#videoStreamServer mobility
*.videoStreamServer.mobilityType = "StationaryMobility"
*.videoStreamServer.mobility.coordinateSystemModule = "coordinateSystem"
*.videoStreamServer.mobility.initialLatitude = 42.3554005deg
*.videoStreamServer.mobility.initialLongitude = -71.0637636deg
*.*Server.mobility.initialAltitude = 0.5m

# videoStreamServer application
*.videoStreamServer.numUdpApps = 1
*.videoStreamServer.udpApp[0].typename = "UDPVideoStreamSvr"
*.videoStreamServer.udpApp[0].localPort = 4000
*.videoStreamServer.udpApp[0].sendInterval = exponential(5ms)
*.videoStreamServer.udpApp[0].packetLen = 1000B
*.videoStreamServer.udpApp[0].videoSize = 50000000B

# client application
*.pedestrianVideo.numUdpApps = 1
*.pedestrianVideo.udpApp[0].typename = "UDPVideoStreamCli"
*.pedestrianVideo.udpApp[0].localPort = 4000
*.pedestrianVideo.udpApp[0].serverAddress = "videoStreamServer"
*.pedestrianVideo.udpApp[0].serverPort = 4000
# can be changed or can be omitted
*.pedestrianVideo.udpApp[0].startTime = 15s

# VISUALIZER
# turn off communication and interface ranges
*.visualizer.*.mediumVisualizer.displayCommunicationRanges = false
*.visualizer.*.mediumVisualizer.displayInterferenceRanges = false

# change displaying VoIP data links to displaying Videostream data links
*.visualizer.*.dataLinkVisualizer.packetNameFilter = "*Video*"

# routing table visualizer: router0 all routing table entries
*.visualizer.*.routingTableVisualizer.subscriptionModule = "router0"
*.visualizer.*.routingTableVisualizer.destinationFilter = "**"


[Config Visualization14]	# Displaying 802.11 channel access state
extends = Visualization13
description = Displaying 802.11 channel access state

# PARAMETERS

# VISUALIZER
# turn off transmissions & receptions
*.visualizer.*.mediumVisualizer.displayTransmissions = false
*.visualizer.*.mediumVisualizer.displayReceptions = false

# turn off statistic visualizer
*.visualizer.*.statisticVisualizer.signalName = ""
*.visualizer.*.statisticVisualizer.statisticName = ""

# turn on ieee802.11 visualizer?
*.visualizer.*.ieee80211Visualizer.nodeFilter = "**"

# info visualizer parameters: shows channel access state
*.visualizer.*.infoVisualizer.modules = "*.*.wlan[0].mac.ctn[0]"
*.visualizer.*.infoVisualizer.content = "displayStringText"


[Config Visualization15]	# Showing active network routes
extends = Visualization14
description = Showing active network routes
network = VisualizationD

# PARAMETERS
# configurate ipv4 addresses manually
*.configurator.config = xmldoc("configurationD.xml")
*.configurator.addDefaultRoutes = false
*.configurator.addStaticRoutes = false
*.router*.hasRIP = true

# accessPoint1
*.accessPoint1.wlan[*].radio.transmitter.power = 1mW
*.accessPoint1.mobility.initialLatitude = 42.35324deg
*.accessPoint1.mobility.initialLongitude = -71.06530deg

# router1 mobility
*.router1.mobility.initialLatitude = 42.35351deg
*.router1.mobility.initialLongitude = -71.06486deg

# pedestrian1 mobility. Changed because we placed a new access point
*.pedestrian1.mobility.initialX = 615m
*.pedestrian1.mobility.initialY = 115m
*.pedestrian1.mobility.constraintAreaMinX = 615m
*.pedestrian1.mobility.constraintAreaMinY = 110m
*.pedestrian1.mobility.constraintAreaMaxX = 620m
*.pedestrian1.mobility.constraintAreaMaxY = 230m

# router0 dhcp
*.router0.hasDHCP = true
*.router0.dhcp.interface = "eth0"
*.router0.dhcp.ipAddressStart = "192.168.0.11"
*.router0.dhcp.subnetMask = "255.255.255.0"
*.router0.dhcp.maxNumClients = 10
*.router0.dhcp.gateway = "192.168.0.1"
*.router0.dhcp.dns = "192.168.0.1"
*.router0.dhcp.leaseTime = 3600s

#router1 dhcp
*.router1.hasDHCP = true
*.router1.dhcp.interface = "eth0"
*.router1.dhcp.ipAddressStart = "192.168.1.11"
*.router1.dhcp.subnetMask = "255.255.255.0"
*.router1.dhcp.maxNumClients = 10
*.router1.dhcp.gateway = "192.168.1.1"
*.router1.dhcp.dns = "192.168.1.1"
*.router1.dhcp.leaseTime = 3600s

# pedestrians dhcp
*.pedestrian0.numUdpApps = 1
*.pedestrian1.numUdpApps = 1
*.pedestrianVideo.numUdpApps = 2
*.pedestrian0.udpApp[0].typename = "DHCPClient"
*.pedestrian1.udpApp[0].typename = "DHCPClient"
*.pedestrianVideo.udpApp[1].typename = "DHCPClient"

# modify VoIP start time because of the dhcp	# If check_and_cast error solved, change pedestrians dhcp to this
#*.pedestrian*.numUdpApps = 2
#*.pedestrian*.udpApp[1].typename = DHCPClient
#*.pedestrian0.udpApp[0].startTime = 10s
#*.pedestrian0.udpApp[0].stopTime = 40s

# accesspoint & pedestrians wifi
*.accessPoint0.wlan[0].mgmt.ssid = "inetwifi0"
*.accessPoint1.wlan[0].mgmt.ssid = "inetwifi1"
*.pedestrian0.wlan[0].agent.default_ssid = ""
*.pedestrianVideo.wlan[0].agent.default_ssid = ""
*.pedestrian1.wlan[0].agent.default_ssid = ""

# VISUALIZER
# turn off routing table
*.visualizer.*.routingTableVisualizer.subscriptionModule = ""
*.visualizer.*.routingTableVisualizer.destinationFilter = ""

# turn off ranges
*.visualizer.*.mediumVisualizer.displayCommunicationRanges = false
*.visualizer.*.mediumVisualizer.displayInterferenceRanges = false

# turn off channel access state
*.visualizer.*.infoVisualizer.modules = ""

# turn on ieee802.11 visualizer: hogy lassuk, hogy ki melyik ap-hoz kapcsolodott
*.visualizer.*.ieee80211Visualizer.nodeFilter = "**"

# show pedestrians' wlan ip addresses
*.visualizer.*.interfaceTableVisualizer.nodeFilter = "**"
*.visualizer.*.interfaceTableVisualizer.interfaceFilter = "wlan*"

# turn off data links
*.visualizer.*.dataLinkVisualizer.packetNameFilter = ""

# turn on network routes
*.visualizer.*.networkRouteVisualizer.packetNameFilter = "*Video*"
*.visualizer.*.networkRouteVisualizer.lineColor = "#FF0000"


[Config Visualization16]	# Displaying physical environment
extends = Visualization15
description = Displaying physical environment
network = VisualizationE

# PARAMETERS
# physical environment
*.physicalEnvironment.coordinateSystemModule = "coordinateSystem"
*.physicalEnvironment.spaceMinX = 0m
*.physicalEnvironment.spaceMinY = 0m
*.physicalEnvironment.spaceMinZ = 0m
*.physicalEnvironment.spaceMaxX = 700m
*.physicalEnvironment.spaceMaxY = 700m
*.physicalEnvironment.spaceMaxZ = 100m
*.physicalEnvironment.config = xmldoc("obstacle.xml")

# VISUALIZER


[Config Visualization17]	# Displaying obstacle loss
extends = Visualization16
description = Displaying obstacle loss

# PARAMETERS
# radio medium parameters
*.radioMedium.obstacleLossType = "DielectricObstacleLoss"

# VISUALIZER
# obstacle loss visualizer: shows obstacle loss
*.visualizer.*.obstacleLossVisualizer.displayIntersectionTrail = true
*.visualizer.*.obstacleLossVisualizer.displayFaceNormalVectorTrail = true


[Config Visualization18]	# Showing packet drops
extends = Visualization17
description = Showing packet drops
network = VisualizationF

# PARAMETERS
# update ipv4 addresses
*.configurator.config = xmldoc("configurationF.xml")

# car appearance
*.car[*].osgModel = "car.osgb.20.scale"
*.car[*].osgModelColor = "#FF0000"

# car wlan communication range parameter
*.car[*].wlan[*].radio.transmitter.power = 0.7mW

# car mobility parameters
*.car[*].mobilityType = "VehicleMobility"
*.car[*].mobility.coordinateSystemModule = "coordinateSystem"
*.car[*].mobility.updateInterval = 100ms
*.car[0].mobility.waypointFile = "waypoint1.txt"
#*.car[1].mobility.waypointFile = "waypoint2.txt"
*.car[*].mobility.waypointProximity = 4m
*.car[*].mobility.speed = 12mps

# car video stream settings
*.car[*].numUdpApps = 2
*.car[*].udpApp[0].typename = "DHCPClient"
*.car[*].udpApp[1].typename = "UDPVideoStreamCli"
*.car[*].udpApp[1].localPort = 4000
*.car[*].udpApp[1].serverAddress = "videoStreamServer"
*.car[*].udpApp[1].serverPort = 4000
*.car[*].udpApp[1].startTime = 10s

*.car[*].wlan[*].agent.default_ssid = ""

# accessPoint2 mobility & wlan
*.accessPoint2.mobility.initialLatitude = 42.35606deg
*.accessPoint2.mobility.initialLongitude = -71.06935deg
*.accessPoint2.wlan[*].radio.transmitter.power = 1mW
*.accessPoint2.wlan[0].mgmt.ssid = "inetwifi2"

# router2 mobility
*.router2.mobility.initialLatitude = 42.3554667deg
*.router2.mobility.initialLongitude = -71.0664122deg

# router3 mobility
*.router3.mobility.initialLatitude =  42.3558974deg
*.router3.mobility.initialLongitude = -71.065796deg

# router2 dhcp
*.router2.hasDHCP = true
*.router2.dhcp.interface = "eth0"
*.router2.dhcp.ipAddressStart = "192.168.2.11"
*.router2.dhcp.subnetMask = "255.255.255.0"
*.router2.dhcp.maxNumClients = 10
*.router2.dhcp.gateway = "192.168.2.1"
*.router2.dhcp.dns = "192.168.2.1"
*.router2.dhcp.leaseTime = 3600s

# router3 dhcp
*.router3.hasDHCP = true
*.router3.dhcp.interface = "eth0"
*.router3.dhcp.ipAddressStart = "192.168.3.11"
*.router3.dhcp.subnetMask = "255.255.255.0"
*.router3.dhcp.maxNumClients = 10
*.router3.dhcp.gateway = "192.168.3.1"
*.router3.dhcp.dns = "192.168.3.1"
*.router3.dhcp.leaseTime = 3600s

# accessPoint3 mobility & wlan
*.accessPoint3.mobility.initialLatitude = 42.357007deg
*.accessPoint3.mobility.initialLongitude = -71.0657737deg
*.accessPoint3.wlan[*].radio.transmitter.power = 1mW
*.accessPoint3.wlan[0].mgmt.ssid = "inetwifi3"

# tcp hosts mobility and tcp application settings
*.tcpHost[*].mobilityType = "StationaryMobility"
*.tcpHost[*].mobility.coordinateSystemModule = "coordinateSystem"
*.tcpHost[*].mobility.initialAltitude = 0.5m

*.tcpHost[1].mobility.initialLatitude = 42.35332deg
*.tcpHost[1].mobility.initialLongitude = -71.06455deg

*.tcpHost[0].mobility.initialLatitude = 42.35552deg
*.tcpHost[0].mobility.initialLongitude = -71.06399deg

# VISUALIZER
# turn off propagating signals, because it makes the simulation slow
*.visualizer.*.mediumVisualizer.displaySignals = false
*.visualizer.*.mediumVisualizer.signalPropagationUpdateInterval = 0s

# visualizer parameters
*.visualizer.*.packetDropVisualizer.packetNameFilter = "**"


[Config Visualization19]	# Displaying transport connections
extends = Visualization18
description = Displaying transport connections

# PARAMETERS
**.tcpHost[*].numTcpApps = 2
**.tcpHost[*].tcpApp[0].typename = "TCPSinkApp"

**.tcpHost[*].tcpApp[1].typename = "TCPSessionApp"
**.tcpHost[0].tcpApp[1].connectAddress = "tcpHost[1]"
**.tcpHost[1].tcpApp[1].connectAddress = "tcpHost[0]"

# VISUALIZER
# transport connection visualizer
*.visualizer.*.transportConnectionVisualizer.nodeFilter = "**"


[Config Visualization20]	# Showing link breaks
extends = Visualization19
description = Showing link breaks

# PARAMETERSvideoStreamServer
# debugging: make the simulation faster. If all devices works, maybe turn it on
**.tcpHost[*].numTcpApps = 0

# car udp after handover
*.car[*].numUdpApps = 2
*.car[*].udpApp[1].typename = "UDPVideoStreamCli"
*.car[*].udpApp[1].localPort = 2000
*.car[*].udpApp[1].serverAddress = "videoStreamServer"
*.car[*].udpApp[1].serverPort = 2000
*.car[*].udpApp[1].startTime = 20s

# videoStreamServer application
*.videoStreamServer.numUdpApps = 2
*.videoStreamServer.udpApp[1].typename = "UDPVideoStreamSvr"
*.videoStreamServer.udpApp[1].localPort = 2000
*.videoStreamServer.udpApp[1].sendInterval = exponential(5ms)
*.videoStreamServer.udpApp[1].packetLen = 1000B
*.videoStreamServer.udpApp[1].videoSize = 30000000B

# VISUALIZER
# link break visualizer parameters
*.visualizer.*.linkBreakVisualizer.nodeFilter = "**"


[Config Visualization21]	# Visualizing handovers
extends = Visualization20
description = Visualizing handovers


[Config Visualization22]
extends = Visualization21
description = Displaying changing routes

# turn on network routes
*.visualizer.*.networkRouteVisualizer.packetNameFilter = "*Video*"
*.visualizer.*.networkRouteVisualizer.lineColor = "#FF0000"
